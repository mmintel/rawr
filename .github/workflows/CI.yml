name: CI
on: [push]
jobs:
  build:
    name: Build
    continue-on-error: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node env
        uses: actions/setup-node@v2
        with:
          node-version: 12.13
      - name: Install dependencies
        run: yarn
      - name: Build Container
        run: docker-compose build
  unit:
    needs: build
    continue-on-error: false
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Unit Test
        run: docker-compose run main yarn test
  e2e:
    needs: build
    name: E2E Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run
      run: docker-compose -f docker-compose.e2e.yml up --abort-on-container-exit --exit-code-from main
  push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
